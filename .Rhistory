axis(2)
text(c(1,2,3,4, 6,7,8,9),125,tuk.cld$mcletters$Letters)
lines(c(0.5,4.5),c(87,87))
lines(c(5.5,9.5),c(87,87))
par(mar = c(0.5,5,0.5,2))
boxplot(breaths$e.EFD ~ tx,at =c(1,2,3,4, 6,7,8,9),ylim = c(85,125),
col = c(rgb(31,120,180,maxColorValue = 255),rgb(51,160,44,maxColorValue = 255),
rgb(166,206,227,maxColorValue = 255),rgb(178,223,138,maxColorValue = 255)),
axes = F, ylab = expression("Energy Flux Density  " ~ (Pa^{2} ~s)))
axis(2)
text(c(1,2,3,4, 6,7,8,9),125,tuk.cld$mcletters$Letters)
lines(c(0.5,4.5),c(87,87))
lines(c(5.5,9.5),c(87,87))
lines(c(0.5,4.5),c(87,87)); text(2,88,"Healthy")
lines(c(5.5,9.5),c(87,87)); text(7,88,"Lung Disease")
lines(c(0.5,4.5),c(87,87)); text(3,88,"Healthy")
lines(c(5.5,9.5),c(87,87)); text(8,88,"Lung Disease")
lines(c(0.5,4.5),c(87,87)); text(2.5,88,"Healthy")
lines(c(5.5,9.5),c(87,87)); text(7.5,88,"Lung Disease")
library(foreign)
tx <- with(breaths, interaction(Cond,Pneum,Dis))
amod <- aov(e.EFD ~ tx, data=breaths)
summary(amod)
library(multcomp)
tuk <- glht(amod, linfct = mcp(tx = "Tukey"))
# summary(tuk)          # standard display
tuk.cld <- cld(tuk)   # letter-based display
par(mar = c(0.5,5,0.5,2))
boxplot(breaths$e.EFD ~ tx,at =c(1,2,3,4, 6,7,8,9),ylim = c(85,125),
col = c(rgb(31,120,180,maxColorValue = 255),rgb(51,160,44,maxColorValue = 255),
rgb(166,206,227,maxColorValue = 255),rgb(178,223,138,maxColorValue = 255)),
axes = F, ylab = expression("Energy Flux Density  " ~ (Pa^{2} ~s)))
axis(2)
text(c(1,2,3,4, 6,7,8,9),125,tuk.cld$mcletters$Letters)
lines(c(0.5,4.5),c(87,87)); text(2.5,88,"Healthy")
lines(c(5.5,9.5),c(87,87)); text(7.5,88,"Lung Disease")
library(foreign)
tx <- with(breaths, interaction(Cond,Pneum,Dis))
amod <- aov(e.EFD ~ tx, data=breaths)
summary(amod)
library(multcomp)
tuk <- glht(amod, linfct = mcp(tx = "Tukey"))
# summary(tuk)          # standard display
tuk.cld <- cld(tuk)   # letter-based display
pdf("Disease_EFD.pdf",width = 3,height = 3)
par(mar = c(0.5,5,0.5,2))
boxplot(breaths$e.EFD ~ tx,at =c(1,2,3,4, 6,7,8,9),ylim = c(85,125),
col = c(rgb(31,120,180,maxColorValue = 255),rgb(51,160,44,maxColorValue = 255),
rgb(166,206,227,maxColorValue = 255),rgb(178,223,138,maxColorValue = 255)),
axes = F, ylab = expression("Energy Flux Density  " ~ (Pa^{2} ~s)))
axis(2)
text(c(1,2,3,4, 6,7,8,9),125,tuk.cld$mcletters$Letters)
lines(c(0.5,4.5),c(87,87)); text(2.5,88,"Healthy")
lines(c(5.5,9.5),c(87,87)); text(7.5,88,"Lung Disease")
dev.off
dev.off()
library(foreign)
tx <- with(breaths, interaction(Cond,Pneum,Dis))
amod <- aov(e.EFD ~ tx, data=breaths)
summary(amod)
library(multcomp)
tuk <- glht(amod, linfct = mcp(tx = "Tukey"))
# summary(tuk)          # standard display
tuk.cld <- cld(tuk)   # letter-based display
pdf("Disease_EFD.pdf",width = 3,height = 3)
par(mar = c(0.5,5,0.5,2))
boxplot(breaths$e.EFD ~ tx,at =c(1,2,3,4, 6,7,8,9),ylim = c(85,125),
col = c(rgb(31,120,180,maxColorValue = 255),rgb(51,160,44,maxColorValue = 255),
rgb(166,206,227,maxColorValue = 255),rgb(178,223,138,maxColorValue = 255)),
axes = F, ylab = expression("Energy Flux Density  " ~ (Pa^{2} ~s)))
axis(2)
text(c(1,2,3,4, 6,7,8,9),125,tuk.cld$mcletters$Letters)
lines(c(0.5,4.5),c(87,87)); text(2.5,88,"Healthy")
lines(c(5.5,9.5),c(87,87)); text(7.5,88,"Lung Disease")
dev.off()
library(foreign)
tx <- with(breaths, interaction(Cond,Pneum,Dis))
amod <- aov(e.EFD ~ tx, data=breaths)
summary(amod)
library(multcomp)
tuk <- glht(amod, linfct = mcp(tx = "Tukey"))
# summary(tuk)          # standard display
tuk.cld <- cld(tuk)   # letter-based display
pdf("Disease_EFD.pdf",width = 5,height = 5)
par(mar = c(0.5,5,0.5,2))
boxplot(breaths$e.EFD ~ tx,at =c(1,2,3,4, 6,7,8,9),ylim = c(85,125),
col = c(rgb(31,120,180,maxColorValue = 255),rgb(51,160,44,maxColorValue = 255),
rgb(166,206,227,maxColorValue = 255),rgb(178,223,138,maxColorValue = 255)),
axes = F, ylab = expression("Energy Flux Density  " ~ (Pa^{2} ~s)))
axis(2)
text(c(1,2,3,4, 6,7,8,9),125,tuk.cld$mcletters$Letters)
lines(c(0.5,4.5),c(87,87)); text(2.5,88,"Healthy")
lines(c(5.5,9.5),c(87,87)); text(7.5,88,"Lung Disease")
dev.off()
q()
# Load data: all breaths from Sarasota
# Load data: all breaths from Sarasota
# BUT UPDATE THIS FILE WITH ACTUAL HEALTH STATUS FINALIZED FROM CYNTHIA SMITH
breaths <- read.table("c:/Users/Julie/Documents/BreathSounds/BreathOnly_SAR.csv", header=TRUE, sep = ",")
# select exhalations (1:5) and all other information (11:16)
exh <- breaths[c(1:5,11:16)]
exh <- na.omit(exh) # omit NaNs
inh <- breaths[c(6:16)]
inh <- na.omit(inh) # omit NaNs
exhCond <- factor(exh$State)
exhPneum <- factor(exh$Pneumo.ON.OFF)
exhDis <- factor(exh$Disease)
# FOR EXHALATIONS
model1 <- aov(exh$e.Fcent ~ exhDis*exhPneum*exhCond)
tk1 <- TukeyHSD(model1)
model2 <- aov(exh$e.EFD ~ exhDis*exhPneum*exhCond)
tk2 <- TukeyHSD(model2)
model3 <- aov(exh$e.time_window ~ exhDis*exhPneum*exhCond)
# model.tables(model3,type = "means")
tk3 <- TukeyHSD(model3)
# Interaction Plot
par(mfrow=c(2,2))
interaction.plot(exhDis,exhPneum,exh$e.time_window)
interaction.plot(exhDis,exhCond,exh$e.time_window)
interaction.plot(Dis,Pneum,breaths$i.time_window)
interaction.plot(Dis,Cond,breaths$i.time_window)
library(scatterplot3d)
# create column indicating point color
exh$pcolor[exh$Dis==1] <- "red"
exh$pcolor[exh$Dis==0] <- "blue"
with(exh, {
s3d <- plot3d(e.time_window, e.EFD, e.Fcent,        # x y and z axis
col=pcolor, pch=19,        # circle color indicates health
# type="h", lty.hplot=2,       # lines to the horizontal plane
# scale.y=.75,                 # scale y axis (reduce by 25%)
main="3-D Scatterplot Example 4",
xlab="95% Energy Duration (sec)",
ylab="EFD (Pa^{2} s)",
zlab="F_{cent} (Hz)")
s3d.coords <- s3d$xyz.convert(e.time_window, e.EFD, e.Fcent)
#  text(s3d.coords$x, s3d.coords$y,     # x and y coordinates
#      labels=row.names(mtcars),       # text to plot
#     pos=4, cex=.5)                  # shrink text 50% and place to right of points)
# add the legend
#  legend("topleft", inset=.05,      # location and inset
#        bty="n", cex=.5,              # suppress legend box, shrink text 50%
#       title="Number of Cylinders",
#      c("4", "6", "8"), fill=c("red", "blue", "darkgreen"))
})
# Load Data
breaths <- read.table("c:/Users/Julie/Documents/BreathSounds/BreathOnly_SAR_34.csv", header=TRUE, sep = ",")
breaths <- na.omit(breaths)
# Set up Factors
Cond <- factor(breaths$State)
Pneum <- factor(breaths$Pneumo.ON.OFF)
Dis <- factor(breaths$Disease)
# FOR EXHALATIONS
model1 <- aov(breaths$e.Fcent ~ Dis*Pneum*Cond)
tk1 <- TukeyHSD(model1)
model2 <- aov(breaths$e.EFD ~ Dis*Pneum*Cond)
tk2 <- TukeyHSD(model2)
model3 <- aov(breaths$e.time_window ~ Dis*Pneum*Cond)
# model.tables(model3,type = "means")
tk3 <- TukeyHSD(model3)
# FOR INHALATIONS
model1.I <- aov(breaths$i.Fcent ~ Dis*Pneum*Cond)
tk1.I <- TukeyHSD(model1.I)
model2.I <- aov(breaths$i.EFD ~ Dis*Pneum*Cond)
tk2.I <- TukeyHSD(model2.I)
model3.I <- aov(breaths$i.time_window ~ Dis*Pneum*Cond)
# model.tables(model3.I,type = "means")
summary(model3.I)
tk3.I <-TukeyHSD(model3.I)
# Interaction Plot
interaction.plot(Dis,Pneum,breaths$e.time_window)
interaction.plot(Dis,Cond,breaths$e.time_window)
interaction.plot(Dis,Pneum,breaths$i.time_window)
interaction.plot(Dis,Cond,breaths$i.time_window)
interaction.plot(Dis,Pneum,breaths$e.Fcent)
interaction.plot(Dis,Cond,breaths$e.Fcent)
interaction.plot(Dis,Pneum,breaths$i.Fcent)
interaction.plot(Dis,Cond,breaths$i.Fcent)
interaction.plot(Dis,Pneum,breaths$e.EFD)
interaction.plot(Dis,Cond,breaths$e.EFD)
interaction.plot(Dis,Pneum,breaths$i.EFD)
interaction.plot(Dis,Cond,breaths$i.EFD)
## FIGURE
# pdf("InteractionPlots.pdf",width = 6,height = 4)
par(mfrow=c(2,3))
interaction.plot(Dis,Cond,breaths$e.time_window, ylab = '95% Energy Duration',ylim = c(0.3,0.8))
mtext("*", side=2, line=-2.5, at=0.6, cex=2) # Healthy water vs. healthy deck
mtext("*", side=1, line=-0.5, at=1.5, cex=2) # Healthy water vs. diseased water
interaction.plot(Dis,Cond,breaths$e.Fcent, ylab = 'Centroid Frequency (Hz)')
mtext("*", side=2, line=-2.5, at=850, cex=2) # Healthy water vs. healthy deck
mtext("*", side=3, line = -2.5, at=1.5, cex=2) # Healthy water vs. diseased water
interaction.plot(Dis,Cond,breaths$e.EFD, ylab = 'Energy Flux Density (Pa^{2} s)')
mtext("*", side=1, line=-0.5, at=1.5, cex=2) # Healthy deck vs disease deck
mtext("*", side=4, line=-0.5, at=108, cex=2) # Disease deck vs disease water
mtext("*", side=3, line=-2.5, at=1.5, cex=2) # Healthy water vs. disease water
interaction.plot(Dis,Cond,breaths$i.time_window, ylab = '95% Energy Duration')
interaction.plot(Dis,Cond,breaths$i.Fcent, ylab = 'Centroid Frequency (Hz)')
interaction.plot(Dis,Cond,breaths$i.EFD, ylab = 'Energy Flux Density (Pa^{2} s)')
# dev.off()
# Are descent and ascent speeds significantly different between entangled and
# and nonentangled, within individuals?
library(R.matlab)
library(agricolae)
setwd("C:/Users/Julie/Documents/MATLAB/Eg4057")
data <- readMat('DescAscVspeed.mat')
# Rename for ease
desc_015a <- data$desc.vspeed.015a # mean descent vertical speed rw015a
asc_015a <- data$asc.vspeed.015a # mean ascent vertical speed rw015a
desc_047a <- data$desc.vspeed.047a
asc_047a <- data$asc.vspeed.047a
condition_015a <- c(rep(1,53),rep(0,101))
condition_047a <- c(rep(0,12),rep(1,8))
# put them together in larger ascent, descent, and condition sets
asc <- c(asc_015a,asc_047a)
desc <- c(desc_015a,desc_047a)
cond <- c(condition_015a,condition_047a)
ind <- c(rep(3911,154),rep(4057,20))
# set up linear model
linear.model <- lm(asc ~ factor(ind) * factor(cond))
asc_anova <- anova(linear.model)
linear.model <- lm(desc ~ factor(ind) * factor(cond))
desc_anova <- anova(linear.model)
# ttest for effect of condition on individuals
t.test(asc_015a[condition_015a > 0],asc_015a[condition_015a < 1])
t.test(asc_047a[condition_047a > 0],asc_047a[condition_047a < 1])
t.test(desc_015a[condition_015a > 0],desc_015a[condition_015a < 1])
t.test(desc_047a[condition_047a > 0],desc_047a[condition_047a < 1])
# PLOT
# load required libraries
require(vioplot)
require(devtools)
require(digest)
require(beanplot)
# set directory for pdf
setwd("C:/Users/Julie/Documents/MATLAB/Eg4057/AnalysisFigures") # set directory to figures
op <- par
pdf("AscentSpeed.pdf",width = 5,height = 5)
beanplot(-asc ~ cond + ind,ll = 0.20,
side = "both" , ylab="Mean Ascent Speed (m/s)",
col = list("white", c("grey", "black")), beanlinewd = 1.5)
dev.off()
par(new)
pdf("DescentSpeed.pdf",width = 5,height = 5)
beanplot(desc ~ cond + ind,ll = 0.20,
side = "both" , ylab="Mean Descent Speed (m/s)",
col = list("white", c("grey", "black")), beanlinewd = 1.5)
par(op)
dev.off()
wd
getwd
beanplot(desc ~ cond + ind,ll = 0.20,
side = "both" , ylab="Mean Descent Speed (m/s)",
col = list("white", c("grey", "black")), beanlinewd = 1.5)
beanplot(desc[ind=3911] ~ cond[ind=3911],ll = 0.20,
side = "both" , ylab="Mean Descent Speed (m/s)",
col = list("white", c("grey", "black")), beanlinewd = 1.5)
View(inh)
cond[ind==3911]
beanplot(desc[ind==3911] ~ cond[ind==3911],ll = 0.20,
side = "both" , ylab="Mean Descent Speed (m/s)",
col = list("white", c("grey", "black")), beanlinewd = 1.5)
library(R.matlab)
library(agricolae)
setwd("C:/Users/Julie/Documents/MATLAB/Eg4057")
data <- readMat('DescAscVspeed.mat')
# Rename for ease
desc_015a <- data$desc.vspeed.015a # mean descent vertical speed rw015a
asc_015a <- data$asc.vspeed.015a # mean ascent vertical speed rw015a
desc_047a <- data$desc.vspeed.047a
asc_047a <- data$asc.vspeed.047a
condition_015a <- c(rep(1,53),rep(0,101))
condition_047a <- c(rep(0,12),rep(1,8))
data <- readMat('DescAscVspeed.mat')
desc_015a <- data$desc.vspeed.015a # mean descent vertical speed rw015a
asc_015a <- data$asc.vspeed.015a # mean ascent vertical speed rw015a
desc_max_015a <- data$desc.maxspeed # maximum descent vertical speed rw015a
asc_max_015a <- data$asc.maxspeed # maximum ascent vertical speed rw015a
desc_047a <- data$desc.vspeed.047a # mean descent
asc_047a <- data$asc.vspeed.047a # mean ascent
condition_015a <- c(rep(1,53),rep(0,101)) # low drag vs high drag
condition_047a <- c(rep(0,12),rep(1,8)) # low drag vs high drag
beanplot(desc_015a ~ condition_015a,ll = 0.20,
side = "both" , ylab="Mean Descent Speed (m/s)",
col = list("white", c("grey", "black")), beanlinewd = 1.5)
desc_015a <- data$desc.vspeed.015a # mean descent vertical speed rw015a
asc_015a <- data$asc.vspeed.015a # mean ascent vertical speed rw015a
desc_max_015a <- data$desc.maxspeed # maximum descent vertical speed rw015a
asc_max_015a <- data$asc.maxspeed # maximum ascent vertical speed rw015a
desc_047a <- data$desc.vspeed.047a # mean descent
asc_047a <- data$asc.vspeed.047a # mean ascent
condition_015a <- c(rep(1,53),rep(0,101)) # low drag vs high drag
condition_047a <- c(rep(0,12),rep(1,8)) # low drag vs high drag
# put them together in larger ascent, descent, and condition sets
asc <- c(asc_015a,asc_047a)
desc <- c(desc_015a,desc_047a)
cond <- c(condition_015a,condition_047a)
ind <- c(rep(3911,154),rep(4057,20))
beanplot(desc_015a ~ condition_015a,ll = 0.20,
+          side = "both" , ylab="Mean Descent Speed (m/s)",
+          col = list("white", c("grey", "black")), beanlinewd = 1.5)
beanplot(desc_015a ~ condition_015a,ll = 0.20,
side = "both" , ylab="Mean Descent Speed (m/s)",
col = list("white", c("grey", "black")), beanlinewd = 1.5)
View(desc_015a)
dim(conditoin_015a)
dim(conditon_015a)
dim(condition_015a)
size(condition_015a)
dims(condition_015a)
dimension(condition_015a)
length(condition_015a)
length(desc_015a)
beanplot(desc_max_015a ~ condition_015a, ll = 0.20,
side = "both", ylab="Max Descent Speed (m/s)")
desc_max_015a
condition_015a
condition_015a <-as.factor(condition_015a)
beanplot(desc_max_015a ~ condition_015a, ll = 0.20,
side = "both", ylab="Max Descent Speed (m/s)")
view(condition_015a)
condition_015a <- c(rep(1,53),rep(0,101)) # low drag vs high drag
condition_015a <- t(c(rep(1,53),rep(0,101))) # low drag vs high drag
beanplot(desc_max_015a ~ condition_015a, ll = 0.20,
side = "both", ylab="Max Descent Speed (m/s)")
beanplot(desc_max_015a ~ condition_015a, ll = 0.20,
side = "both", ylab="Max Descent Speed (m/s)",
col = list("white",c("grey","black")),beanlinewd = 1.5)
par(new)
par(mfrow = c(1, 2))
pdf("MeanMaxSpeed_3911.pdf",width = 5,height = 5)
beanplot(desc[ind==3911] ~ cond[ind==3911],ll = 0.20,
side = "both" , ylab="Mean Descent Speed (m/s)",
col = list("white", c("grey", "black")), beanlinewd = 1.5)
beanplot(desc_max_015a ~ condition_015a, ll = 0.20,
side = "both", ylab="Max Descent Speed (m/s)",
col = list("white",c("grey","black")),beanlinewd = 1.5)
par(op)
dev.off()
par(new)
par(mfrow = c(2, 1))
pdf("MeanMaxSpeed_3911.pdf",width = 5,height = 5)
beanplot(desc[ind==3911] ~ cond[ind==3911],ll = 0.20,
side = "both" , ylab="Mean Descent Speed (m/s)",
col = list("white", c("grey", "black")), beanlinewd = 1.5)
beanplot(desc_max_015a ~ condition_015a, ll = 0.20,
side = "both", ylab="Max Descent Speed (m/s)",
col = list("white",c("grey","black")),beanlinewd = 1.5)
par(op)
dev.off()
par(new)
par(mfrow = c(2, 1))
pdf("MeanMaxSpeed_3911.pdf",width = 5,height = 5)
beanplot(desc[ind==3911] ~ cond[ind==3911],ll = 0.20,
side = "both" , ylab="Mean Descent Speed (m/s)",
col = list("white", c("grey", "black")), beanlinewd = 1.5)
beanplot(desc_max_015a ~ condition_015a, ll = 0.20,
side = "both", ylab="Max Descent Speed (m/s)",
col = list("white",c("grey","black")),beanlinewd = 1.5)
dev.off()
par(new)
par(mfrow = c(2, 1))
beanplot(desc[ind==3911] ~ cond[ind==3911],ll = 0.20,
side = "both" , ylab="Mean Descent Speed (m/s)",
col = list("white", c("grey", "black")), beanlinewd = 1.5)
beanplot(desc_max_015a ~ condition_015a, ll = 0.20,
side = "both", ylab="Max Descent Speed (m/s)",
col = list("white",c("grey","black")),beanlinewd = 1.5)
par(new)
par(mfrow = c(1, 2))
beanplot(desc[ind==3911] ~ cond[ind==3911],ll = 0.20,
side = "both" , ylab="Mean Descent Speed (m/s)",
col = list("white", c("grey", "black")), beanlinewd = 1.5)
beanplot(desc_max_015a ~ condition_015a, ll = 0.20,
side = "both", ylab="Max Descent Speed (m/s)",
col = list("white",c("grey","black")),beanlinewd = 1.5)
par(new)
par(mfrow = c(1, 2))
pdf("MeanMaxSpeed_3911.pdf",width = 10,height = 5)
beanplot(desc[ind==3911] ~ cond[ind==3911],ll = 0.20,
side = "both" , ylab="Mean Descent Speed (m/s)",
col = list("white", c("grey", "black")), beanlinewd = 1.5,
ylim = c(0,1.6))
beanplot(desc_max_015a ~ condition_015a, ll = 0.20,
side = "both", ylab="Max Descent Speed (m/s)",
col = list("white",c("grey","black")),beanlinewd = 1.5b,
ylim = c(0,1.6))
dev.off()
beanplot(desc_max_015a ~ condition_015a, ll = 0.20,
side = "both", ylab="Max Descent Speed (m/s)",
col = list("white",c("grey","black")),beanlinewd = 1.5b,
ylim = c(0,1.6))
par(new)
par(mfrow = c(1, 2))
pdf("MeanMaxSpeed_3911.pdf",width = 10,height = 5)
beanplot(desc[ind==3911] ~ cond[ind==3911],ll = 0.20,
side = "both" , ylab="Mean Descent Speed (m/s)",
col = list("white", c("grey", "black")), beanlinewd = 1.5,
ylim = c(0,1.6))
beanplot(desc_max_015a ~ condition_015a, ll = 0.20,
side = "both", ylab="Max Descent Speed (m/s)",
col = list("white",c("grey","black")),beanlinewd = 1.5,
ylim = c(0,1.6))
dev.off()
par(new)
par(mfrow = c(1, 2))
pdf("MeanMaxSpeed_3911.pdf",width = 2,height = 5)
beanplot(desc[ind==3911] ~ cond[ind==3911],ll = 0.20,
side = "both" , ylab="Mean Descent Speed (m/s)",
col = list("white", c("grey", "black")), beanlinewd = 1.5,
ylim = c(0,1.6))
beanplot(desc_max_015a ~ condition_015a, ll = 0.20,
side = "both", ylab="Max Descent Speed (m/s)",
col = list("white",c("grey","black")),beanlinewd = 1.5,
ylim = c(0,1.6))
dev.off()
par(new)
par(mfrow = c(1, 2))
# pdf("MeanMaxSpeed_3911.pdf",width = 2,height = 5)
beanplot(desc[ind==3911] ~ cond[ind==3911],ll = 0.20,
side = "both" , ylab="Mean Descent Speed (m/s)",
col = list("white", c("grey", "black")), beanlinewd = 1.5,
ylim = c(0,1.6))
beanplot(desc_max_015a ~ condition_015a, ll = 0.20,
side = "both", ylab="Max Descent Speed (m/s)",
col = list("white",c("grey","black")),beanlinewd = 1.5,
ylim = c(0,1.6))
beanplot(desc_max_015a ~ condition_015a, ll = 0.20,
side = "both", ylab="Max Descent Speed (m/s)",
col = list("white",c("grey","black")),beanlinewd = 1.5,
ylim = c(0,1.6),xlabel("Low","High"))
beanplot(desc_max_015a ~ condition_015a, ll = 0.20,
side = "both", ylab="Max Descent Speed (m/s)",
col = list("white",c("grey","black")),beanlinewd = 1.5,
ylim = c(0,1.6),xlabel = c("Low","High"))
beanplot(desc_max_015a ~ condition_015a, ll = 0.20,
side = "both", ylab="Max Descent Speed (m/s)",
col = list("white",c("grey","black")),beanlinewd = 1.5,
ylim = c(0,1.6),names = c("Low","High"))
par(new)
par(mfrow = c(1, 2))
# pdf("MeanMaxSpeed_3911.pdf",width = 2,height = 5)
beanplot(desc[ind==3911] ~ cond[ind==3911],ll = 0.20,
side = "both" , ylab="Mean Descent Speed (m/s)",
col = list("white", c("grey", "black")), beanlinewd = 1.5,
ylim = c(0,1.6), names = c("Low","High"))
beanplot(desc_max_015a ~ condition_015a, ll = 0.20,
side = "both", ylab="Max Descent Speed (m/s)",
col = list("white",c("grey","black")),beanlinewd = 1.5,
ylim = c(0,1.6), names = c("Low","High"))
dev.off()
# Are descent and ascent speeds significantly different between entangled and
# and nonentangled, within individuals?
library(R.matlab)
library(agricolae)
setwd("C:/Users/Julie/Documents/MATLAB/Eg4057")
data <- readMat('DescAscVspeed.mat')
# Rename for ease
desc_015a <- data$desc.vspeed.015a # mean descent vertical speed rw015a
asc_015a <- data$asc.vspeed.015a # mean ascent vertical speed rw015a
desc_max_015a <- data$desc.maxspeed # maximum descent vertical speed rw015a
asc_max_015a <- data$asc.maxspeed # maximum ascent vertical speed rw015a
desc_047a <- data$desc.vspeed.047a # mean descent
asc_047a <- data$asc.vspeed.047a # mean ascent
condition_015a <- t(c(rep(1,53),rep(0,101))) # low drag vs high drag
condition_047a <- c(rep(0,12),rep(1,8)) # low drag vs high drag
# put them together in larger ascent, descent, and condition sets
asc <- c(asc_015a,asc_047a)
desc <- c(desc_015a,desc_047a)
cond <- c(condition_015a,condition_047a)
ind <- c(rep(3911,154),rep(4057,20))
# set up linear model
linear.model <- lm(asc ~ factor(ind) * factor(cond))
asc_anova <- anova(linear.model)
linear.model <- lm(desc ~ factor(ind) * factor(cond))
desc_anova <- anova(linear.model)
# ttest for effect of condition on individuals
t.test(asc_015a[condition_015a > 0],asc_015a[condition_015a < 1])
t.test(asc_047a[condition_047a > 0],asc_047a[condition_047a < 1])
t.test(desc_015a[condition_015a > 0],desc_015a[condition_015a < 1])
t.test(desc_047a[condition_047a > 0],desc_047a[condition_047a < 1])
# PLOT
# load required libraries
require(vioplot)
require(devtools)
require(digest)
require(beanplot)
# set directory for pdf
setwd("C:/Users/Julie/Documents/MATLAB/Eg4057/AnalysisFigures") # set directory to figures
op <- par
pdf("AscentSpeed.pdf",width = 5,height = 5)
beanplot(-asc ~ cond + ind,ll = 0.20,
side = "both" , ylab="Mean Ascent Speed (m/s)",
col = list("white", c("grey", "black")), beanlinewd = 1.5)
dev.off()
par(new)
pdf("DescentSpeed.pdf",width = 5,height = 5)
beanplot(desc ~ cond + ind,ll = 0.20,
side = "both" , ylab="Mean Descent Speed (m/s)",
col = list("white", c("grey", "black")), beanlinewd = 1.5)
par(op)
dev.off()
par(new)
par(mfrow = c(1, 2))
pdf("MeanMaxSpeed_3911.pdf",width = 5,height = 5)
beanplot(desc[ind==3911] ~ cond[ind==3911],ll = 0.20,
side = "both" , ylab="Mean Descent Speed (m/s)",
col = list("white", c("grey", "black")), beanlinewd = 1.5,
ylim = c(0,1.6), names = c("Low","High"))
beanplot(desc_max_015a ~ condition_015a, ll = 0.20,
side = "both", ylab="Max Descent Speed (m/s)",
col = list("white",c("grey","black")),beanlinewd = 1.5,
ylim = c(0,1.6), names = c("Low","High"))
dev.off()
